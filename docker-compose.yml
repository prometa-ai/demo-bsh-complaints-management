services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bsh-postgres
    environment:
      - POSTGRES_DB=bsh_english_complaints
      - POSTGRES_USER=bsh_user
      - POSTGRES_PASSWORD=bsh_password
    ports:
      - "5434:5432"  # Use port 5434 to avoid conflicts
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./setup_database.py:/docker-entrypoint-initdb.d/setup_database.py
    networks:
      - bsh-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bsh_user -d bsh_english_complaints"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flask Application
  web:
    build: .
    container_name: bsh-complaints-app
    ports:
      - "8080:8080"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=bsh_english_complaints
      - DB_USER=bsh_user
      - DB_PASSWORD=bsh_password
      - SECRET_KEY=${SECRET_KEY:-super-secret-key-for-development}
      - FLASK_ENV=development
      - PORT=8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bsh-network
    volumes:
      - ./static:/app/static
      - ./templates:/app/templates
    restart: unless-stopped

  # pgAdmin (Optional - Database yönetimi için)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bsh-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@bsh.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - bsh-network
    restart: unless-stopped

networks:
  bsh-network:
    driver: bridge

volumes:
  postgres_data: 